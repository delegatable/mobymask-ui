{"version":3,"sources":["types.js","logo.svg","chainList.js","LazyConnect.jsx","createRegistry.js","TextInput.jsx","PhisherCheck.jsx","InstallExtension.jsx","linkForInvitation.js","copyInvitationLink.js","ReviewAndRevokeInvitations.jsx","contractInfo.js","reportPhishers.js","PhishingReport.jsx","reportMembers.js","MemberReport.jsx","MemberCheck.jsx","createInvitation.js","Members.jsx","QueryParamsRoute.jsx","App.jsx","index.jsx"],"names":["module","exports","primaryType","domain","name","version","entries","delegate","caveat","authority","types","EIP712Domain","type","Invocation","Invocations","SignedInvocation","Transaction","ReplayProtection","Delegation","Caveat","SignedDelegation","chainIds","LazyConnect","props","actionName","chainId","opts","needsAccountConnected","useState","provider","setInjectedProvider","accounts","setAccounts","userChainId","setUserChainId","loading","setLoading","MetaMaskOnboarding","isMetaMaskInstalled","window","ethereum","chainName","chainList","Number","useEffect","getAccounts","then","catch","console","error","on","removeListener","a","request","method","_accounts","length","log","getUserChainId","needsToSwitchChain","needsToConnectAccount","requiresAction","className","createChecklist","hasWallet","onClick","startOnboarding","children","childrenWithProps","React","Children","map","child","isValidElement","cloneElement","checklistOpts","switchAccountsItem","switchNetworkItem","params","toString","reason","setError","abi","require","address","createRegistry","readOnly","wallet","getSigner","toUse","attachRegistry","registry","signer","Registry","ethers","Contract","attach","_registry","deployed","TextInput","onComplete","placeholder","buttonLabel","value","setValue","onKeyPress","event","key","onChange","target","PhisherCheck","output","setOutput","checkPhisher","result","PhisherCheckButton","ethersProvider","providers","Web3Provider","setRegistry","codedName","toLowerCase","isPhisher","InstallExtension","disabled","linkForInvitation","invitation","location","origin","encodeURIComponent","JSON","stringify","copyInvitationLink","petName","Promise","resolve","inviteLink","navigator","clipboard","writeText","alert","err","generateUtil","util","verifyingContract","invitations","setInvitations","_invitation","index","message","signedDelegations","signedDelegation","delegationHash","createSignedDelegationHash","intendedRevocation","signedIntendedRevocation","signRevocation","revokeDelegation","newInvites","splice","localStorage","setItem","createMembership","reportPhishers","phishers","membership","contractInfo","all","phisher","_phisher","indexOf","slice","populateTransaction","claimIfPhisher","desiredTx","invocation","transaction","to","data","gasLimit","invocations","queue","Math","floor","random","signedInvocations","signInvocations","batch","replayProtection","nonce","invoke","setPhisher","setPhishers","loaded","setLoaded","rawStorage","getItem","storedPhishers","parse","includes","newPhishers","push","filter","p","SubmitBatchButton","clear","reportMembers","members","member","_member","claimIfMember","setMembers","storedMembers","newMembers","MemberCheck","checkMember","MemberCheckButton","isMember","signDelegation","TypedDataUtils","validateInvitation","Members","query","search","useLocation","useMemo","URLSearchParams","useQuery","loadingFromDisk","setLoadingFromDisk","errorMessage","setErrorMessage","setInvitation","history","useHistory","rawLoaded","document","cookie","parsedInvitation","get","checkInvitations","loadedInvitations","inviteView","addInvitation","tier","prompt","newInvitation","createInvitation","generateInviteView","PhishingReport","MemberReport","ReviewAndRevokeInvitations","QueryParamsRouter","exact","path","App","src","logo","alt","href","themes","dark","process","light","prevTheme","subgraphUri","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","themeMap","defaultTheme","getElementById"],"mappings":"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","file":"static/js/main.ef238b44.chunk.js","sourcesContent":["const typedMessage = {\n  primaryType: 'Delegation',\n  domain: {\n    name: 'MobyMask',\n    version: '1',\n  },\n\n  entries: {\n    delegate: \"address\",\n    caveat: \"Caveat\",\n    authority: \"SignedDelegation\",\n  },\n\n  types: {\n    EIP712Domain: [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ],\n    Invocation: [\n      { name: 'transaction', type: 'Transaction' },\n      { name: 'authority', type: 'SignedDelegation[]' },\n    ],\n    Invocations: [\n      { name: 'batch', type: 'Invocation[]' },\n      { name: 'replayProtection', type: 'ReplayProtection' },\n    ],\n    SignedInvocation: [\n      { name: 'invocations', type: 'Invocations' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    Transaction: [\n      { name: 'to', type: 'address' },\n      { name: 'gasLimit', type: 'uint256' },\n      { name: 'data', type: 'bytes' },\n    ],\n    ReplayProtection: [\n      { name: 'nonce', type: 'uint' },\n      { name: 'queue', type: 'uint' },\n    ],\n    Delegation: [\n      { name: 'delegate', type: 'address' },\n      { name: 'authority', type: 'bytes32' },\n      { name: 'caveats', type: 'Caveat[]' },\n    ],\n    Caveat: [\n      { name: 'enforcer', type: 'address' },\n      { name: 'terms', type: 'bytes' },\n    ],\n    SignedDelegation: [\n      { name: 'delegation', type: 'Delegation' },\n      { name: 'signature', type: 'bytes' },\n    ],\n  }\n};\n\nmodule.exports = typedMessage;\n","export default __webpack_public_path__ + \"static/media/logo.06de1321.svg\";","const chainIds = {\n  0: \"kardia\",\n  1: \"ethereum\",\n  3: \"ropsten test\",\n  4: \"rinkeby test\",\n  5: \"goerli test\",\n  8: \"ubiq\",\n  10: \"optimism\",\n  19: \"songbird\",\n  20: \"elastos\",\n  25: \"cronos\",\n  30: \"rsk\",\n  40: \"telos\",\n  42: \"kovan test\",\n  52: \"csc\",\n  55: \"zyx\",\n  56: \"binance\",\n  57: \"syscoin\",\n  60: \"gochain\",\n  61: \"ethclassic\",\n  66: \"okexchain\",\n  70: \"hoo\",\n  82: \"meter\",\n  88: \"tomochain\",\n  100: \"xdai\",\n  106: \"velas\",\n  108: \"thundercore\",\n  122: \"fuse\",\n  128: \"heco\",\n  137: \"polygon\",\n  200: \"xdaiarb\",\n  246: \"energyweb\",\n  250: \"fantom\",\n  269: \"hpb\",\n  288: \"boba\",\n  321: \"kucoin\",\n  336: \"shiden\",\n  361: \"theta\",\n  534: \"candle\",\n  592: \"astar\",\n  820: \"callisto\",\n  888: \"wanchain\",\n  1088: \"metis\",\n  1284: \"moonbeam\",\n  1285: \"moonriver\",\n  2020: \"ronin\",\n  2612: \"ezchain\",\n  4689: \"iotex\",\n  5050: \"xlc\",\n  5551: \"nahmii\",\n  8217: \"klaytn\",\n  10000: \"smartbch\",\n  32659: \"fusion\",\n  42161: \"arbitrum\",\n  42220: \"celo\",\n  42262: \"oasis\",\n  43114: \"avalanche\",\n  71394: \"godwoken\",\n  333999: \"polis\",\n  1313161554: \"aurora\",\n  1666600000: \"harmony\",\n  11297108109: \"palm\",\n  836542336838601: \"curio\",\n};\n\nexport default chainIds;\n","import React, { useEffect, useState } from \"react\";\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport chainList from './chainList';\n\nexport default function LazyConnect (props) {\n  const { actionName, chainId } = props;\n  let { opts = {} } = props;\n  const { needsAccountConnected = true } = opts;\n  const [provider, setInjectedProvider] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [userChainId, setUserChainId] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  if (!provider && MetaMaskOnboarding.isMetaMaskInstalled()) { \n    setInjectedProvider(window.ethereum);\n  }\n\n  const chainName = chainId ? chainList[Number(chainId)] : null;\n\n  // Get accounts;\n  useEffect(() => {\n    if (!provider) {\n      return;\n    }\n    getAccounts()\n    .then(setAccounts)\n    .catch(console.error);\n\n    async function getAccounts() {\n      try {\n        const _accounts = await provider.request({ method: 'eth_accounts' });\n        if (_accounts.length > 0) {\n          setAccounts(_accounts);\n        }\n      } catch (err) {\n        console.log('Getting accounts failed!', err);\n      }\n    }\n\n    provider.on(\"accountsChanged\", setAccounts);\n\n    return () => {\n      provider.removeListener('accountsChanged', setAccounts);\n    }\n  }, []);\n\n  // Get current selected network:\n  useEffect(() => {\n    if (!provider || userChainId) {\n      return;\n    }\n    getUserChainId()\n    .then(setUserChainId)\n    .catch(console.error);\n\n    async function getUserChainId() {\n      const chainId = await provider.request({ method: 'eth_chainId' });\n      return chainId;\n    }\n\n    provider.on('chainChanged', setUserChainId);\n\n    return () => {\n      provider.removeListener('chainChanged', setUserChainId);\n    }\n  }, []);\n\n  const needsToSwitchChain = Number(userChainId) !== chainId;\n  const needsToConnectAccount = needsAccountConnected && (!accounts || accounts.length === 0);\n  const requiresAction = needsToSwitchChain || needsToConnectAccount;\n\n  if (!MetaMaskOnboarding.isMetaMaskInstalled()) {\n    return (<div className=\"lazyConnect\">\n      { createChecklist({\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        provider,\n        needsToConnectAccount,\n        setLoading,\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n      <button onClick={() => {\n        const onboarding = new MetaMaskOnboarding();\n        onboarding.startOnboarding();\n        }}>Get MetaMask</button>\n    </div>);\n  }\n  \n  if (requiresAction) {\n    return <div className=\"lazyConnect\">\n      { createChecklist({\n        setLoading,\n        provider,\n        needsToConnectAccount,\n        hasWallet: MetaMaskOnboarding.isMetaMaskInstalled(),\n        chainId: chainId,\n        userChainId,\n        chainName,\n        setAccounts,\n        needsAccountConnected,\n        actionName,\n        accounts,\n      })}\n    </div>\n  }\n\n  if (loading) {\n    return (<div className=\"lazyConnect\">Loading...</div>)\n  }\n\n  const { children } = props;\n\n  const childrenWithProps = React.Children.map(children, child => {\n    // Checking isValidElement is the safe way and avoids a typescript\n    // error too.\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { provider });\n    }\n    return child;\n  });  \n\n  return (<div className=\"lazyConnected\">{childrenWithProps}</div>)\n}\n\nfunction createChecklist (checklistOpts) {\n  const { chainId, userChainId, chainName, setAccounts, provider, setLoading,\n    needsToConnectAccount,\n    needsAccountConnected, actionName, hasWallet, accounts } = checklistOpts;\n  return (<div>\n    <p>You need a few things to {actionName}.</p>\n    <ol>\n      { hasWallet ?\n        <li>✅ Get a web3 compatible Wallet (like MetaMask)</li> :\n        <li>☐ Get a web3 compatible Wallet (like MetaMask)</li> }\n      { switchAccountsItem({ needsAccountConnected, needsToConnectAccount, setAccounts, provider, setLoading, accounts, hasWallet }) }\n      { switchNetworkItem({ chainId, userChainId, chainName, setAccounts, provider, setLoading, hasWallet })} \n    </ol>\n   </div>);\n}\n\nfunction switchAccountsItem (opts) {\n  const { needsToConnectAccount, setAccounts, accounts, provider, hasWallet } = opts;\n\n  if (!needsToConnectAccount) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>☐ Connect an account</li>;\n  }\n\n  if (typeof accounts !== 'undefined' && accounts.length > 0) {\n    return null;\n  }\n\n  return <li>☐ <button onClick={async () => {\n      const _accounts = await provider.request({ method: 'eth_requestAccounts' });\n      setAccounts(_accounts);\n    }}>Connect an account</button>\n  </li>\n}\n\nfunction switchNetworkItem (opts) {\n  const { chainId, userChainId, chainName, provider, setLoading, hasWallet } = opts;\n  const needsToSwitchChain =  !!chainId && (Number(userChainId) !== chainId);\n\n  if (!needsToSwitchChain) {\n    return null;\n  }\n\n  if (!hasWallet) {\n    return <li>Switch to the {chainName} network</li>;\n  }\n\n  return <li>\n    <button onClick={async () => {\n      provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x' + chainId.toString(16) }],\n      })\n      .then(() => {\n        setLoading(false);\n      })\n      .catch((reason) => {\n        setLoading(false);\n        setError(reason);\n      });\n      setLoading(true);\n    }}>Switch to the { chainName } network</button>\n  </li>\n}\n","import { ethers } from \"ethers\";\nconst { abi } = require('./artifacts');\nconst { address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function createRegistry (provider, readOnly = false) {\n  const wallet = !readOnly && provider.getSigner();\n  const toUse = readOnly ? provider : wallet;\n  const registry = await attachRegistry(toUse);\n  return registry;\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\n\nexport default function TextInput (props) {\n  const { onComplete, placeholder, buttonLabel } = props;\n  const [ value, setValue ] = useState('');\n      \n  return <div>\n    <input type=\"text\" value={value} placeholder={placeholder} onKeyPress={(event) => {\n      if (event.key === 'Enter') {\n        onComplete(value);\n        setValue('');\n      }\n    }} onChange={(event) => {\n      setValue(event.target.value);\n    }}/>\n    \n    <button onClick={() => { onComplete(value) }}>{ buttonLabel }</button>\n  </div>\n} \n","import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport createRegistry from './createRegistry';\nimport TextInput from './TextInput';\n\nexport default function PhisherCheck (props) {\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Phisher Status</h3>\n      <TextInput placeholder=\"Enter a Twitter name\" buttonLabel=\"Check\"\n      onComplete={(name) => {\n        props.checkPhisher(name)\n        .then((result) => {\n          setOutput(result);\n        })\n        .catch(console.error);\n      }}/>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}\n\nexport function PhisherCheckButton (props) {\n  const { provider } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider, true)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return <PhisherCheck checkPhisher={async (name) => {\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isPhisher(codedName);\n      if (result) {\n        return `${name} is an accused phisher.`;\n      } else {\n        return `${name} is not a registered phisher.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}","import React from 'react';\n\nfunction InstallExtension() {\n  return (\n    <div className='box'>\n      <p>\n        Get warned about phishers on the web:\n      </p>\n      <button className='installButton' disabled>Install the Web Extension (coming soon!)</button>\n    </div>\n  );\n}\n\nexport default InstallExtension;\n","export default function linkForInvitation (invitation) {\n  return window.location.origin + '/#/members?invitation=' + encodeURIComponent(JSON.stringify(invitation));\n}","import linkForInvitation from \"./linkForInvitation\";\n\nexport default function copyInvitationLink (invitation, petName) {\n  return new Promise((resolve) => {\n    const inviteLink = linkForInvitation(invitation);\n    navigator.clipboard.writeText(inviteLink).then(function() {\n      alert('Your invite link for ' + petName + ' has been copied to your clipboard. Paste it somewhere only the intended recipients can see or you can lose your membership: \\n\\n' + inviteLink);\n      resolve();\n    })\n    .catch(function(err) {\n      alert('Had trouble writing to your clipboard. Here is your invite link (it may be copied). Paste it somewhere only the intended recipients can see or you can lose your membership: \\n\\n' + inviteLink);\n      resolve();\n    });\n  });\n}\n","import { ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nconst { generateUtil } = require('eth-delegatable-utils');\nconst { chainId, address, name } = require('./config.json');\nimport createRegistry from './createRegistry';\nimport linkForInvitation from './linkForInvitation';\nconst CONTRACT_NAME = name;\nconst util = generateUtil({\n  chainId,\n  verifyingContract: address,\n  name: CONTRACT_NAME,\n});\nimport copyInvitationLink from './copyInvitationLink';\n\nexport default function (props) {\n  const { provider, invitations, invitation, setInvitations } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return (<details className='box'>\n    <summary>Outstanding Invitations ({invitations.length})</summary>\n    { invitations.map((_invitation, index) => {\n      return (\n        <div key={index}>\n          <span>{ _invitation.petName }</span>\n          <input type=\"text\" readOnly value={linkForInvitation(_invitation.invitation)}></input>\n          <button onClick={() => {\n            copyInvitationLink(_invitation.invitation, _invitation.petName)\n            .catch((err) => alert(err.message));\n          }}>Copy</button>\n          <button onClick={async () => {\n            const { signedDelegations } = _invitation.invitation;\n            const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n            const delegationHash = util.createSignedDelegationHash(signedDelegation);\n            const intendedRevocation = {\n              delegationHash,\n            }\n            const signedIntendedRevocation = util.signRevocation(intendedRevocation, invitation.key);\n\n            await registry.revokeDelegation(signedDelegation, signedIntendedRevocation);\n\n            const newInvites = [...invitations];\n            newInvites.splice(index, 1);\n            localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n            setInvitations(newInvites);\n          }}>Revoke</button>\n        </div>\n      )\n    })}\n  </details>);\n\n}","const { chainId, address, name } = require('./config.json');\n\nexport default {\n  chainId,\n  name,\n  verifyingContract: address,\n}\n","import { ethers } from \"ethers\";\nconst types = require('./types')\nconst { createMembership } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nimport contractInfo from \"./contractInfo\";\nconst CONTRACT_NAME = name;\n\nexport default async function reportPhishers (phishers, provider, invitation) {\n  const { key, signedDelegations } = invitation;\n  const membership = createMembership({\n    contractInfo,\n    invitation,\n  });\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(phishers.map(async (phisher) => {\n    const _phisher = phisher.indexOf('@') === '0' ? phisher.slice(1) : phisher;\n    const desiredTx = await registry.populateTransaction.claimIfPhisher(`TWT:${_phisher.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n      authority: signedDelegations,\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = membership.signInvocations({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  });\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\nimport reportPhishers from './reportPhishers';\nimport LazyConnect from './LazyConnect';\nconst { ethers } = require(\"ethers\");\nconst config = require('./config.json')\nconst { chainId } = config;\nimport TextInput from './TextInput';\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ phisher, setPhisher ] = useState();\n  const [ phishers, setPhishers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingPhishers');\n      let storedPhishers = JSON.parse(rawStorage) || [];\n      setPhishers(storedPhishers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  return (\n    <div className='box'>\n      <h3>Report a phishing attempt</h3>\n      <TextInput placeholder=\"@phisher_person\" buttonLabel=\"Report\"\n        onComplete={(phisher) => {\n        const _phisher = phisher.indexOf('@') === 0 ? phisher.slice(1) : phisher;\n        if (phishers.includes(_phisher)) return;\n        const newPhishers = [...phishers, _phisher];\n        console.log('new phishers is ', newPhishers);\n        localStorage.setItem('pendingPhishers', JSON.stringify(newPhishers));\n        setPhishers(newPhishers);\n      }}/>\n\n      <button onClick={() => {\n        if (phisher) {\n          phishers.push(phisher);\n          localStorage.setItem('pendingPhishers', JSON.stringify(phishers));\n          setPhisher('');\n        } \n      }}>Report twitter phisher</button>\n\n      <div className='phishers'>\n        { phishers && phishers.length > 0 ? \n        <div>\n          <p>Pending phishing reports:</p>\n          <ol>\n            {phishers.map((phisher, index) => {\n              return (<li key={index}>{phisher} <button onClick={() => {\n                const newPhishers = phishers.filter((p) => p !== phisher);\n                localStorage.setItem('pendingPhishers', JSON.stringify(newPhishers));\n                setPhishers(newPhishers);\n              }}>Remove</button></li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit reports directly to the blockchain\" chainId={chainId}>\n            <SubmitBatchButton phishers={phishers} invitation={invitation} setPhishers={setPhishers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, phishers, invitation, setPhishers } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  console.log('trying to submit batch with', ethersProvider);\n  return (<div>\n    <button onClick={async () => {\n      try {\n        const block = await reportPhishers(phishers, ethersProvider, invitation);\n        localStorage.clear();\n        setPhishers([]);\n      } catch (err) {\n        alert(`Error: ${err}`);\n      }\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import { ethers } from \"ethers\";\nimport contractInfo from \"./contractInfo\";\nconst types = require('./types')\nconst { createMembership } = require('eth-delegatable-utils');\nconst { abi } = require('./artifacts');\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\n\nexport default async function reportMembers (members, provider, invitation) {\n  const membership = createMembership({\n    contractInfo,\n    invitation,\n  });\n\n  const wallet = provider.getSigner();\n  const registry = await attachRegistry(wallet);\n\n  const invocations = await Promise.all(members.map(async (member) => {\n    const _member = member.indexOf('@') === '0' ? member.slice(1) : member;\n    const desiredTx = await registry.populateTransaction.claimIfMember(`TWT:${_member.toLowerCase()}`, true);\n    const invocation = {\n      transaction: {\n        to: address,\n        data: desiredTx.data,\n        gasLimit: 500000,\n      },\n   }\n   return invocation;\n  }));\n\n  const queue = Math.floor(Math.random() * 100000000);\n  const signedInvocations = membership.signInvocations({\n    batch: invocations,\n    replayProtection: {\n      nonce: 1,\n      queue,\n    }\n  });\n\n  return await registry.invoke([signedInvocations]);\n}\n\nasync function attachRegistry (signer) {\n  const Registry = new ethers.Contract(address, abi, signer);\n  const _registry = await Registry.attach(address);\n  const deployed = await _registry.deployed();\n  return deployed;\n}\n","import React, { useEffect, useState } from 'react';\nimport reportMembers from './reportMembers';\nimport LazyConnect from './LazyConnect';\nconst { ethers } = require(\"ethers\");\nconst config = require('./config.json')\nconst { chainId } = config;\nimport TextInput from './TextInput';\n\nexport default function (props ) {\n  const { invitation } = props;\n  const [ members, setMembers ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(function loadMembersFromDisk () {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('pendingMembers');\n      let storedMembers = JSON.parse(rawStorage) || [];\n      setMembers(storedMembers);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  return (\n    <div className='box'>\n      <h3>Endorse a member</h3>\n      <TextInput placeholder=\"@member_person\" buttonLabel=\"Endorse\"\n        onComplete={(member) => {\n          const _member = member.indexOf('@') === 0 ? member.slice(1) : member;\n          if (members.includes(_member)) return;\n          const newMembers = [...members, _member];\n          setMembers(newMembers);\n          localStorage.setItem('pendingMembers', JSON.stringify(newMembers));\n      }}/>\n\n      <div className='members'>\n        { members && members.length > 0 ? \n        <div>\n          <p>Pending member nominations:</p>\n          <ol>\n            {members.map((member, index) => {\n              return (<li key={index}>{member} <button onClick={() => {\n                const newMembers = members.filter((p) => p !== member);\n                localStorage.setItem('pendingMembers', JSON.stringify(newMembers));\n                setMembers(newMembers);\n              }}>Remove</button></li>);\n            })}\n          </ol>\n\n          <LazyConnect actionName=\"submit endorsements directly to the blockchain\" chainId={chainId}>\n            <SubmitBatchButton members={members} invitation={invitation} setMembers={setMembers}/>\n          </LazyConnect>\n          </div> : null }\n      </div>\n    </div>\n  )\n}\n\nfunction SubmitBatchButton (props) {\n  const { provider, members, invitation, setMembers } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  return (<div>\n    <button onClick={async () => {\n      try {\n        const block = await reportMembers(members, ethersProvider, invitation);\n        localStorage.clear();\n        setMembers([]);\n     } catch (err) {\n        console.error(err);\n        alert(`Error: ${err}`);\n      }\n    }}>Submit batch to blockchain</button>\n  </div>);\n}\n","import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport createRegistry from './createRegistry';\nimport TextInput from './TextInput';\n\nexport default function MemberCheck (props) {\n  const [output, setOutput] = useState('');\n  return (\n    <div>\n      <h3>Check Member Status</h3>\n      <TextInput placeholder=\"Enter a Twitter name\" buttonLabel=\"Check\"\n      onComplete={(name) => {\n        props.checkMember(name)\n        .then((result) => {\n          setOutput(result);\n        })\n        .catch(console.error);\n      }}/>\n      {output ? <p>{output}</p> : null}\n    </div>\n  )\n}\n\nexport function MemberCheckButton (props) {\n  const { provider } = props;\n  const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n  const [ registry, setRegistry ] = useState(null);\n\n  // Get registry\n  useEffect(() => {\n    if (registry) {\n      return;\n    }\n\n    createRegistry(ethersProvider, true)\n    .then((_registry) => {\n      setRegistry(_registry);\n    }).catch(console.error);\n  });\n\n  if (!registry) {\n    return <p>Loading...</p>\n  }\n\n  return <MemberCheck checkMember={async (name) => {\n    const codedName = `TWT:${name.toLowerCase()}`;\n    try {\n      const result = await registry.isMember(codedName);\n      if (result) {\n        return `${name} is an endorsed moby.`;\n      } else {\n        return `${name} has not been endorsed.`;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }}/>\n}","const { signDelegation } = require('eth-delegatable-utils');\nimport { ethers } from \"ethers\";\nconst { chainId, address, name } = require('./config.json');\nconst CONTRACT_NAME = name;\nconst sigUtil = require('eth-sig-util');\nconst { TypedDataUtils } = sigUtil;\nconst types = require('./types');\n\nexport default function createInvitation (invitation) {\n  const { signedDelegations, key } = invitation;\n  const signedDelegation = signedDelegations[signedDelegations.length - 1];\n\n  const delegate = ethers.Wallet.createRandom();\n  console.log('types', types);\n  const delegationHash = TypedDataUtils.hashStruct('SignedDelegation', signedDelegation, types.types, true);\n  const hexHash = '0x' + delegationHash.toString('hex');\n\n  const delegation = {\n    delegate: delegate.address,\n    authority: hexHash,\n\n    // Revokable by default:\n    caveats: [{\n      enforcer: address,\n      terms: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    }]\n  }\n\n  const newSignedDelegation = signDelegation(delegation, key, {\n    chainId,\n    verifyingContract: address,\n    name: CONTRACT_NAME,\n  });\n  const newInvite = {\n    signedDelegations: [...signedDelegations, newSignedDelegation],\n    key: delegate.privateKey,\n  }\n  console.log({ newInvite });\n  return newInvite;\n}\n","import React, { useEffect, useState } from 'react';\nimport InstallExtension from \"./InstallExtension\"\nimport ReviewAndRevokeInvitations from './ReviewAndRevokeInvitations';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Routes,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nconst { validateInvitation } = require('eth-delegatable-utils');\nimport contractInfo from './contractInfo';\nconst { chainId } = contractInfo;\n\nimport PhishingReport from './PhishingReport';\nimport MemberReport from './MemberReport';\nimport { PhisherCheckButton } from './PhisherCheck';\nimport { MemberCheckButton } from './MemberCheck';\nimport createInvitation from './createInvitation';\nconst { createMembership } = require('eth-delegatable-utils');\nimport LazyConnect from './LazyConnect';\nimport copyInvitationLink from './copyInvitationLink';\n\nexport default function Members (props) {\n  const query = useQuery();\n\n  const [ loaded, setLoaded ] = useState(false); // For loading invitations\n  const [ loadingFromDisk, setLoadingFromDisk ] = useState(false);\n  const [ errorMessage, setErrorMessage ] = useState(null);\n\n  const [ invitation, setInvitation ] = useState(null); // Own invitation\n  const [ invitations, setInvitations ] = useState([]); // Outbound invitations\n  const history = useHistory();\n\n  \n  // Load user's own invitation from disk or query string:\n  useEffect(() => {\n    async function checkInvitations () {\n      if (!loadingFromDisk) {\n        setLoadingFromDisk(true);\n\n        if (!invitation) {\n          try {\n            let parsedInvitation;\n            let rawLoaded = document.cookie;\n            if (rawLoaded) {\n              parsedInvitation = JSON.parse(rawLoaded);\n            }\n            if (!parsedInvitation || parsedInvitation === 'null') {\n              parsedInvitation = JSON.parse(query.get(\"invitation\"));\n              validateInvitation({\n                contractInfo,\n                invitation: parsedInvitation,\n              });\n              document.cookie = query.get(\"invitation\");\n            }\n\n            history.push('/members');\n            validateInvitation({\n              contractInfo,\n              invitation: parsedInvitation,\n            });\n            if (parsedInvitation) {\n              setInvitation(parsedInvitation);\n            }\n            setLoadingFromDisk(false);\n          } catch (err) {\n            console.error(err);\n            setErrorMessage(err.message);\n          }\n        }\n      }\n    }\n\n    checkInvitations().catch(console.error);\n  });\n\n  // Load user's outstanding invitations from disk:\n  useEffect(() => {\n    if (loaded) {\n      return;\n    }\n    try {\n      const rawStorage = localStorage.getItem('outstandingInvitations');\n      let loadedInvitations = JSON.parse(rawStorage) || [];\n      setInvitations(loadedInvitations);\n      setLoaded(true);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n\n  if (!invitation) {\n    if (errorMessage) {\n      return (<div>\n        <h3>Invalid invitation.</h3>\n        <p>Sorry, we were unable to process your invitation.</p>\n        <p className='error'>{ errorMessage } </p>\n      </div>)   \n    } else {\n      return (<div>\n        <h3>Processing invitation...</h3> \n      </div>)\n    }\n  }\n\n  const inviteView = generateInviteView(invitation, (invitation) => {\n    console.log('adding invitation', invitation);\n    if (invitation) {\n      const newInvites = [...invitations, invitation];\n      localStorage.setItem('outstandingInvitations', JSON.stringify(newInvites));\n      setInvitations(newInvites);\n    } \n  });\n\n  return (\n    <div>\n      <div className=\"controlBoard\">\n\n        <div className=\"phisherBox\">\n          <div className='box'>\n            <LazyConnect actionName=\"check if a user is a phisher\" chainId={chainId}\n              opts={{ needsAccountConnected: false }}>\n              <PhisherCheckButton/>\n            </LazyConnect>\n          </div>\n\n          <div className=\"box\">\n            <PhishingReport invitation={invitation}/>\n          </div>\n        </div>\n\n        <div className=\"memberBox\">\n          <div className='box'>\n            <LazyConnect actionName=\"check if a user is endorsed\" chainId={chainId}\n              opts={{ needsAccountConnected: false }}>\n              <MemberCheckButton/>\n            </LazyConnect>\n          </div>\n\n          <div className=\"box\">\n            <MemberReport invitation={invitation}/>\n          </div>\n        </div>\n\n        <div className=\"inviteBox\">\n          { inviteView }\n\n          <LazyConnect actionName=\"revoke outstanding invitations\" chainId={chainId}>\n            <ReviewAndRevokeInvitations\n              invitations={invitations}\n              invitation={invitation}\n              setInvitations={setInvitations}/>\n          </LazyConnect>\n\n        </div>\n\n        <InstallExtension />\n      </div>\n\n    </div>\n  )\n}\n\nfunction generateInviteView(invitation, addInvitation) {\n  const tier = invitation.signedDelegations.length;\n\n  const membership = createMembership({\n    invitation,\n    contractInfo,\n  })\n\n  if (tier < 4) {\n    return (\n      <div className='box'>\n        <p>You are a tier {invitation.signedDelegations.length} invitee. This means you can invite up to {4-tier} additional tiers of members.</p>\n        <p>Invite people who you think will respect the system, and only report definite impostors and frauds, and only endorse people who are neither.</p>\n        <p>If you invite an abusive person and don't revoke their activity quickly, you may have your membership revoked.</p>\n        <button onClick={() => {\n          const petName = prompt('Who is this invitation for (for your personal use only, so you can view their reports and revoke the invitation)?');\n          const newInvitation = membership.createInvitation();\n          copyInvitationLink(newInvitation, petName)\n          .then(() => {\n            if (addInvitation) {\n              addInvitation({\n                petName,\n                invitation: newInvitation,\n              });\n            }\n          })\n          .catch(() => {\n            addInvitation({\n              petName,\n              invitation: newInvitation,\n            });\n          })\n        }}>Create new invite link</button>\n      </div> \n    );\n  } else if (tier === 4) {\n    <div>\n      <p>You are a tier 4 member. That means you can't currently invite new members through this interface, but if this site becomes popular, we can add support for this later.</p>\n    </div> \n  }\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\nimport LazyConnect from './LazyConnect';\nimport { PhisherCheckButton } from './PhisherCheck';\nconst { chainId } = require('./config.json');\n\n// Routes\nimport InstallExtension from './InstallExtension';\nimport Members from './Members';\nimport { MemberCheckButton } from './MemberCheck';\n\nexport default function QueryParamsRouter(props) {\n  const { provider } = props;\n  let query = useQuery();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <div className='box'>\n          <LazyConnect actionName=\"check if a user is a phisher or member\" chainId={chainId}\n            opts={{ needsAccountConnected: false }}>\n            <PhisherCheckButton/>\n            <MemberCheckButton/>\n          </LazyConnect>\n        </div>\n\n        <InstallExtension/>\n      </Route>\n      <Route path=\"/members/\">\n        <Members/>\n      </Route>\n    </Switch>\n  );\n}\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import logo from './logo.svg';\nimport QueryParamsRoute from './QueryParamsRoute';\nimport \"antd/dist/antd.css\";\nimport { HashRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <h1>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          MobyMask</h1>\n        <p>\n          An alliance of good-hearted phish, aiming to eliminate phishers. \n        </p>\n      </header>\n\n      <Router>\n        <QueryParamsRoute/>\n      </Router>\n\n      <div className='footer'>\n        <p>Reporters are added on an invite-only basis.</p>\n        <p><a href=\"https://mirror.xyz/0x55e2780588aa5000F464f700D2676fD0a22Ee160/8whNch3m5KMzeo6g5eblcXMMplPf8UpW228cSh3nmzg\">Learn more</a></p>\n        <p><a href=\"https://github.com/danfinlay/MobyMask/\">Fork on GitHub</a></p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme || \"light\"}>\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}